<Page x:Class="HermesApp.Pages.ClientListPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:HermesApp.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="550" d:DesignWidth="850"
      Title="ClientListPage"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Page.Resources>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="#FFE0DD46" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="130"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="130"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <StackPanel Style="{StaticResource PageTitle_Panel}"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"/>

        <StackPanel Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <TextBlock Style="{StaticResource PageTitle_Block}" Text="Список клиентов"/>
        </StackPanel>

        <Image Source="/Materials/VHS.png" Grid.Column="0" Grid.Row="0"/>
        
        <Button x:Name="ReturnPageBut" Grid.Column="2" Margin="10" Click="ReturnPageBut_Click">
            <Image Source="/Materials/back_icon.png"/>
        </Button>

        <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
            <TextBlock Text="Найти по" Style="{StaticResource ClientListPage_SearchBlock}"/>
            <ComboBox Template="{DynamicResource ComboBoxTemplate1}" x:Name="SearchIndicateComboBox" SelectedIndex="0">
                <ComboBoxItem>ФИО</ComboBoxItem>
                <ComboBoxItem>Email</ComboBoxItem>
                <ComboBoxItem>Телефон</ComboBoxItem>
            </ComboBox>
            <TextBox x:Name="SearchBox" MinWidth="200" MaxWidth="400" Style="{StaticResource ClientListPage_SearchBox}"/>
        </StackPanel>
        
        <!--Список клиентов-->
        <StackPanel Grid.Row="2" Grid.Column="1"
                    HorizontalAlignment="Center" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Visible">
            <ListView d:ItemsSource="{d:SampleData ItemCount=5}" Height="360" Width="550" HorizontalContentAlignment="Center">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness="5">
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal" Style="{StaticResource ClientListPage_ListView_Panel}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="100"/>
                                            <ColumnDefinition Width="250"/>
                                            <ColumnDefinition Width="120"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <StackPanel Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Left">
                                            <TextBlock Text="Id: " Style="{StaticResource ClientListPage_ListView_Block}"/>
                                            <TextBlock Text="{Binding Id}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                        </StackPanel>


                                        <StackPanel Orientation="Horizontal" Grid.Column="2" Style="{StaticResource ClientListPage_BlocksPanel}" HorizontalAlignment="Right">
                                            <TextBlock Text="Пол: " Style="{StaticResource ClientListPage_ListView_Block}"/>
                                            <TextBlock Text="{Binding Gender}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>


                                <StackPanel Orientation="Horizontal" Style="{StaticResource ClientListPage_ListView_Panel}">
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" Style="{StaticResource ClientListPage_BlocksPanel}">
                                        <TextBlock Text="{Binding FName}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" Style="{StaticResource ClientListPage_BlocksPanel}">
                                        <TextBlock Text="{Binding LName}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" Style="{StaticResource ClientListPage_BlocksPanel}">
                                        <TextBlock Text="{Binding Patronymic}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" Style="{StaticResource ClientListPage_BlocksPanel}">
                                        <TextBlock Text="{Binding Phone}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" Style="{StaticResource ClientListPage_BlocksPanel}">
                                        <TextBlock Text="{Binding Email}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                    </StackPanel>
                                </StackPanel>


                                <StackPanel Orientation="Horizontal">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="290"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>


                                        <StackPanel Orientation="Vertical" Style="{StaticResource ClientListPage_ListView_Panel}" Grid.Column="0">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Дата рождения: " Style="{StaticResource ClientListPage_ListView_Block}"/>
                                                <TextBlock Text="{Binding Birthday}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Дата добавления: " Style="{StaticResource ClientListPage_ListView_Block}"/>
                                                <TextBlock Text="{Binding DateAdded}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Последнее посещение: " Style="{StaticResource ClientListPage_ListView_Block}"/>
                                                <TextBlock Text="{Binding DateLastVisit}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                            </StackPanel>
                                        </StackPanel>

                                        <StackPanel Grid.Column="1">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Кол-во посещений: " Style="{StaticResource ClientListPage_ListView_Block}"/>
                                                <TextBlock Text="{Binding CountVisits}" Style="{StaticResource ClientListPage_ListView_Block}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <Button x:Name="ClientTagsBut" Click="ClientTagsBut_Click">
                                                    <TextBlock Text="Тяги клиента" Style="{StaticResource ClientListPage_ListView_Block}" VerticalAlignment="Center"/>
                                                </Button>
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackPanel>

        <!--Сортировка списка-->
        <StackPanel Grid.Row="1" Orientation="Vertical">
            <TextBlock Text="Сортировка" Style="{StaticResource CentralAlign_Little_TextBlock}"/>
        </StackPanel>

        <StackPanel Grid.Row="2" Orientation="Vertical">
            <RadioButton x:Name="Sort_LastNameBut" GroupName="SortRadioBut" Click="Sort_LastNameBut_Click">
                <RadioButton.Content>
                    <TextBlock Text="по фамилии" Style="{StaticResource ClientListPage_SortRadioBlock}"/>
                </RadioButton.Content>
            </RadioButton>

            <RadioButton x:Name="Sort_DatelastVisitBut" GroupName="SortRadioBut" Click="Sort_DatelastVisitBut_Click">
                <RadioButton.Content>
                    <TextBlock Text="по дате последнего посещения" Style="{StaticResource ClientListPage_SortRadioBlock}"/>
                </RadioButton.Content>
            </RadioButton>

            <RadioButton x:Name="Sort_VisitsBut" GroupName="SortRadioBut" Click="Sort_VisitsBut_Click">
                <RadioButton.Content>
                    <TextBlock Text="по дате последнего посещения" Style="{StaticResource ClientListPage_SortRadioBlock}"/>
                </RadioButton.Content>
            </RadioButton>
            
            <RadioButton x:Name="Sort_RemoveBut" GroupName="SortRadioBut" Click="Sort_VisitsBut_Click">
                <RadioButton.Content>
                    <TextBlock Text="сортировка убрана" Style="{StaticResource ClientListPage_SortRadioBlock}"/>
                </RadioButton.Content>
            </RadioButton>
        </StackPanel>
        
        <!--Список кнопок инструментов пользователя-->
        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    Style="{StaticResource ClientListPage_ListManagePanel}">
            <Button x:Name="Output_BackBut" Content="Назад" Click="Output_BackBut_Click"/>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Вывод на экране по " Style="{StaticResource CentralAlign_TextBlock}"/>
                <ComboBox Template="{DynamicResource ComboBoxTemplate1}" x:Name="Output_IndexComboBox" SelectedIndex="0">
                    <ComboBoxItem>Все</ComboBoxItem>
                    <ComboBoxItem>10</ComboBoxItem>
                    <ComboBoxItem>50</ComboBoxItem>
                    <ComboBoxItem>200</ComboBoxItem>
                </ComboBox>
                <TextBlock Text=" записей" Style="{StaticResource CentralAlign_TextBlock}"/>
            </StackPanel>
            <Button x:Name="Output_ForwardBut" Content="Вперед" Click="Output_ForwardBut_Click"/>
        </StackPanel>

        <!--Фильтрация списка-->
        <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Vertical">
            <TextBlock Text="Фильтрация" Style="{StaticResource CentralAlign_Little_TextBlock}"/>
        </StackPanel>

        <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Vertical">
            <RadioButton x:Name="Filtr_GenderBut" GroupName="SortRadioBut" Click="Filtr_GenderBut_Click">
                <RadioButton.Content>
                    <TextBlock Text="по полу" Style="{StaticResource ClientListPage_SortRadioBlock}"/>
                </RadioButton.Content>
            </RadioButton>

            <RadioButton x:Name="Filtr_ThrowBut" GroupName="SortRadioBut" Click="Filtr_ThrowBut_Click">
                <RadioButton.Content>
                    <TextBlock Text="фильтрация сброшена" Style="{StaticResource ClientListPage_SortRadioBlock}"/>
                </RadioButton.Content>
            </RadioButton>
        </StackPanel>
    </Grid>
</Page>
